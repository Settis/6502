    INCDIR "../std"
    INCLUDE "std.asm"
    INCLUDE "in_ram.asm"

UART_ADDR_LOW = $FD
UART_ADDR_HIGH = $FE
UART_ADDR_LENGTH = $FC
UART_HANDLER_WORD = $FA ; & $FB


UART_PING_COMMAND = 1
UART_WRITE_COMMAND = 2

IRQ_HANDLER:
    subroutine
    LDA UART_STATUS_REG
    ; skip checking
    JMP (UART_HANDLER_WORD)

READ_UART_COMMAND:
    subroutine
    LDA UART_DATA_REG
    CMP #UART_PING_COMMAND
    BNE .check_write_command
    WRITE_WORD READ_PING_DATA, UART_HANDLER_WORD
.check_write_command
    CMP #UART_WRITE_COMMAND
    BNE .ignore
.ignore
    RTI

READ_PING_DATA:
    LDA UART_DATA_REG
    CLC
    ADC #1
    STA UART_DATA_REG
    WRITE_WORD READ_UART_COMMAND, UART_HANDLER_WORD
    RTI

debug_start:
reset_start:
    ; Set control register
    LDA #UART_CONTROL_DEFAULT
    STA UART_CONTROL_REG

    ; Set command register
    LDA #UART_COMMAND_PARITY_MOD_ENABLED | UART_COMMAND_RECEIVER_EVEN_PARITY_CHECKED | UART_COMMAND_TRANSMIT_INTERRUPT_DISABLED | UART_COMMAND_DATA_TERMINAL_READY
    ;LDA #%11101001
    STA UART_COMMAND_REG

    ; Init UART handler
    WRITE_WORD READ_UART_COMMAND, UART_HANDLER_WORD

    CLI

loop:
    jmp loop