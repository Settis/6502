.include "../include/std.inc"
.include "../include/delayImport.inc"

; Libs: delay

SEND_COMMAND = $80
WAIT_50_MS = $40
WAIT_1_MS = 0
VALUE_MASK = $3F

.zeropage
DATA_POINTER: .res 2
COMMAND_SIZE: .res 1

.code
.export main
.proc main
    A8_IND8
    LDA #$FF
    STA VIA_22_FIRST + W65C22::DDRA
    LDA #%00001110
    STA VIA_22_FIRST + W65C22::PCR

    JSR OFF_ALL

    LDA #<MUSIC_DATA
    STA DATA_POINTER
    LDA #>MUSIC_DATA
    STA DATA_POINTER+1

@PLAY_LOOP:
    LDA (DATA_POINTER)
    BNE @TEST_SEND
    JMP OFF_ALL
@TEST_SEND:
    TAX
    AND #SEND_COMMAND
    BEQ @TEST_WAIT_50
    TXA
    AND #VALUE_MASK
    STA COMMAND_SIZE
    LDY #0
@COMMAND_LOOP:
    INY
    PHY
    LDA (DATA_POINTER),Y
    JSR send
    PLY
    CPY COMMAND_SIZE
    BNE @COMMAND_LOOP
    INY
    TYA
    CLC
    ADC DATA_POINTER
    STA DATA_POINTER
    BCC @PLAY_LOOP
    INC DATA_POINTER+1
    BRA @PLAY_LOOP

@TEST_WAIT_50:
    TXA
    AND #WAIT_50_MS
    BEQ @RUN_WAIT_1
    TXA
    AND #VALUE_MASK
    JSR wait50msOfA
    BRA @INCREASE_POINTER
@RUN_WAIT_1:
    TXA
    JSR wait1msOfA
@INCREASE_POINTER:
    INC DATA_POINTER
    BNE @PLAY_LOOP
    INC DATA_POINTER+1
    BRA @PLAY_LOOP

.endproc

MUSIC_DATA:
.include "../../music/music.a65"
    .byte 0

.proc OFF_ALL
    LDA #%11111001
    JSR send
    LDA #%11111101
    JSR send
    LDA #%11111011
    JSR send
    LDA #%11111111
    JMP send
.endproc

.proc send
    STA VIA_22_FIRST + W65C22::RA
    JMP send_pulse
.endproc

.proc send_pulse
    LDA #%00001100
    STA VIA_22_FIRST + W65C22::PCR

    LDX #3
    LDY #6
    JSR DELAY_LOOP

    LDA #%00001110
    STA VIA_22_FIRST + W65C22::PCR
    RTS
.endproc

.proc wait50msOfA
@LOOP:
    PHA
    LDX #252
    LDY #237   
    JSR DELAY_LOOP
    PLA
    DEA
    BNE @LOOP
    RTS
.endproc

.proc wait1msOfA
@LOOP:
    PHA
    LDX #238
    LDY #5    
    JSR DELAY_LOOP
    PLA
    DEA
    BNE @LOOP
    RTS
.endproc
