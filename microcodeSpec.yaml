address:
  - type: counter
    size: 4
  - type: instruction
    size: 8
  - type: condition
    name: CF
  - type: condition
    name: ZF
  - type: condition
    name: VF
  - type: condition
    name: NF
outBits:
  - name: AddrOut
    offset: 0
  - name: MicRst
    offset: 1
  - name: CntLIn
    offset: 2
  - name: CntHIn
    offset: 3
  - name: CntEn
    offset: 4
  - name: InstIn
    offset: 5
  - name: AluM
    offset: 6
  - name: SecondSelect
    type: enum
    offset: 7
    values:
      - Alu0
      - AluA
      - AluX
      - AluY
      - AluSp
      - AluAddrL
      - AluAddrH
      - AluB
  - name: OpSelect
    type: enum
    offset: 10
    values:
      - Add
      - Sub
      - Or
      - And
      - Xor
      - ASL
      - LSR
      - RTL
      - RTR
      - AddAddrLAndY
  - name: AluOutSelect
    type: enum
    offset: 14
    values:
      - AluToB
      - AluToA
      - AluToX
      - AluToY
      - AluToSp
      - AluToAddrH
      - AluToAddrL
      - AluToF
  - name: DataOutSelect
    type: enum
    offset: 17
    values:
      - DataOutNull
      - DataOutA
      - DataOutB
      - DataOutPcH
      - DataOutPcL
      - DataOutX
      - DataOutY
      - DataOutF
  - name: FlagInst
    type: enum
    offset: 20
    values:
      - FlagNone
      - ClearCarry
      - SetCarry
      - ClearInt
      - SetInt
      - ClearOverfl
      - ClearDec
      - SetDec
  - name: UseCF
    type: enum
    offset: 23
    values:
      - CF0
      - CF1
      - LCF
      - CF
  - name: CFEn
    offset: 25
  - name: ZFEn
    offset: 26
  - name: VFEn
    offset: 27
  - name: NFEn
    offset: 28
  - name: AddrShift
    offset: 29
defaultStartSteps:
  - InstIn | CntEn
defaultEndSteps:
  - MicRst
prefixSteps:
  - name: ZP
    steps:
      - AluToAddrH
      - AluM | AluToAddrL | CntEn
  - name: ZPX
    steps:
      - AluToAddrH
      - AluM | AluX | Add | AluToAddrL | CntEn
  - name: Abs
    steps:
      - AluM | AluToAddrL | CntEn
      - AluM | AluToAddrH | CntEn
  - name: AbsX
    steps:
      - AluM | AluX | Add | AluToAddrL | CntEn
      - AluM | LCF | Add | AluToAddrH | CntEn
  - name: AbsY
    steps:
      - AluM | AluY | Add | AluToAddrL | CntEn
      - AluM | LCF | Add | AluToAddrH | CntEn
  - name: IndX
    steps:
      - AluToAddrH
      - AluM | AluX | Add | AluToAddrL | CntEn
      - AddrOut | AluM | AluToB
      - AluAddrL | CF1 | Add | AluToAddrL
      - AddrOut | AluM | AluToAddrH
      - AluB | AluToAddrL
  - name: IndY
    steps:
      - AluToAddrH
      - AluM | AluToAddrL | CntEn
      - AddrOut | AluM | AluToB
      - AluAddrL | CF1 | Add | AluToAddrL
      - AddrOut | AluM | AluToAddrH
      - AluB | AluToAddrL
      - AddAddrLAndY | AluToAddrL
      - AluAddrH | LCF | Add | AluToAddrH
  - name: BrPos
    steps:
      - AluM | AluToB | CntEn
      - AddrShift
  - name: BrNeg
    steps:
      - CntEn
commands:
  - name: "ADC #$44"
    value: 0x69
    steps:
      - AluM | AluA | Add | CF | AluToA | CntEn | NFEn | VFEn | ZFEn | CFEn
  - name: "ADC $44"
    value: 0x65
    prefix: ZP
    steps:
      - AddrOut | AluM | AluA | Add | CF | AluToA | NFEn | VFEn | ZFEn | CFEn
  - name: "ADC $44,X"
    value: 0x75
    prefix: ZPX
    steps:
      - AddrOut | AluM | AluA | Add | CF | AluToA | NFEn | VFEn | ZFEn | CFEn
  - name: "ADC $4400"
    value: 0x6d
    prefix: Abs
    steps:
      - AddrOut | AluM | AluA | Add | CF | AluToA | NFEn | VFEn | ZFEn | CFEn
  - name: "ADC $4400,X"
    value: 0x7d
    prefix: AbsX
    steps:
      - AddrOut | AluM | AluA | Add | CF | AluToA | NFEn | VFEn | ZFEn | CFEn
  - name: "ADC $4400,Y"
    value: 0x79
    prefix: AbsY
    steps:
      - AddrOut | AluM | AluA | Add | CF | AluToA | NFEn | VFEn | ZFEn | CFEn
  - name: "ADC ($44,X)"
    value: 0x61
    prefix: IndX
    steps:
      - AddrOut | AluM | AluA | Add | CF | AluToA | NFEn | VFEn | ZFEn | CFEn
  - name: "ADC ($44),Y"
    value: 0x71
    prefix: IndY
    steps:
      - AddrOut | AluM | AluA | Add | CF | AluToA | NFEn | VFEn | ZFEn | CFEn
  - name: "AND #$44"
    value: 0x29
    steps:
      - AluM | And | AluToA | NFEn | ZFEn | CntEn
  - name: "AND $44"
    value: 0x25
    prefix: ZP
    steps:
      - AddrOut | AluM | And | AluToA | NFEn | ZFEn
  - name: "AND $44,X"
    value: 0x35
    prefix: ZPX
    steps:
      - AddrOut | AluM | And | AluToA | NFEn | ZFEn
  - name: "AND $4400"
    value: 0x2d
    prefix: Abs
    steps:
      - AddrOut | AluM | And | AluToA | NFEn | ZFEn
  - name: "AND $4400,X"
    value: 0x3d
    prefix: AbsX
    steps:
      - AddrOut | AluM | And | AluToA | NFEn | ZFEn
  - name: "AND $4400,Y"
    value: 0x39
    prefix: AbsY
    steps:
      - AddrOut | AluM | And | AluToA | NFEn | ZFEn
  - name: "AND ($44,X)"
    value: 0x21
    prefix: IndX
    steps:
      - AddrOut | AluM | And | AluToA | NFEn | ZFEn
  - name: "AND ($44),Y"
    value: 0x31
    prefix: IndY
    steps:
      - AddrOut | AluM | And | AluToA | NFEn | ZFEn
  - name: "ASL A"
    value: 0x0a
    steps:
      - ASL | AluToA | NFEn | ZFEn | CFEn
  - name: "ASL $44"
    value: 0x06
    prefix: ZP
    steps:
      - AddrOut | AluM | ASL | AluToB | NFEn | ZFEn | CFEn
      - AddrOut | DataOutB
  - name: "ASL $44,X"
    value: 0x16
    prefix: ZPX
    steps:
      - AddrOut | AluM | ASL | AluToB | NFEn | ZFEn | CFEn
      - AddrOut | DataOutB
  - name: "ASL $4400"
    value: 0x0e
    prefix: Abs
    steps:
      - AddrOut | AluM | ASL | AluToB | NFEn | ZFEn | CFEn
      - AddrOut | DataOutB
  - name: "ASL $4400,X"
    value: 0x1e
    prefix: AbsX
    steps:
      - AddrOut | AluM | ASL | AluToB | NFEn | ZFEn | CFEn
      - AddrOut | DataOutB
  - name: "BIT $44" # Sets only Z bit
    value: 0x24
    prefix: ZP
    steps:
      - AddrOut | AluM | AluA | And | ZFEn
  - name: "BIT $4400" # Sets only Z bit
    value: 0x2c
    prefix: Abs
    steps:
      - AddrOut | AluM | AluA | And | ZFEn
  - name: "BPL+"
    value: 0x10
    condition:
      - NF_0
    prefix: BrPos
    steps: []
  - name: "BPL-"
    value: 0x10
    condition:
      - NF_1
    prefix: BrNeg
    steps: []
  - name: "BMI+"
    value: 0x30
    condition:
      - NF_1
    prefix: BrPos
    steps: []
  - name: "BMI-"
    value: 0x30
    condition:
      - NF_0
    prefix: BrNeg
    steps: []
  - name: "BVC+"
    value: 0x50
    condition:
      - VF_0
    prefix: BrPos
    steps: []
  - name: "BVC-"
    value: 0x50
    condition:
      - VF_1
    prefix: BrNeg
    steps: []
  - name: "BVS+"
    value: 0x70
    condition:
      - VF_1
    prefix: BrPos
    steps: []
  - name: "BVS-"
    value: 0x70
    condition:
      - VF_0
    prefix: BrNeg
    steps: []
  - name: "BCC+"
    value: 0x90
    condition:
      - CF_0
    prefix: BrPos
    steps: []
  - name: "BCC-"
    value: 0x90
    condition:
      - CF_1
    prefix: BrNeg
    steps: []
  - name: "BCS+"
    value: 0xb0
    condition:
      - CF_1
    prefix: BrPos
    steps: []
  - name: "BCS-"
    value: 0xb0
    condition:
      - CF_0
    prefix: BrNeg
    steps: []
  - name: "BNE+"
    value: 0xd0
    condition:
      - ZF_1
    prefix: BrPos
    steps: []
  - name: "BNE-"
    value: 0xd0
    condition:
      - ZF_0
    prefix: BrNeg
    steps: []
  - name: "BEQ+"
    value: 0xf0
    condition:
      - ZF_1
    prefix: BrPos
    steps: []
  - name: "BEQ-"
    value: 0xf0
    condition:
      - ZF_0
    prefix: BrNeg
    steps: []
  # BRK not implemented
  - name: "CMP #$44"
    value: 0xc9
    steps:
      - AluM | AluA | Sub | NFEn | ZFEn | CFEn | CntEn
  - name: "CMP $44"
    value: 0xc5
    prefix: ZP
    steps:
      - AddrOut | AluM | AluA | Sub | NFEn | ZFEn | CFEn
  - name: "CMP $44,X"
    value: 0xd5
    prefix: ZPX
    steps:
      - AddrOut | AluM | AluA | Sub | NFEn | ZFEn | CFEn
  - name: "CMP $4400"
    value: 0xcd
    prefix: Abs
    steps:
      - AddrOut | AluM | AluA | Sub | NFEn | ZFEn | CFEn
  - name: "CMP $4400,X"
    value: 0xdd
    prefix: AbsX
    steps:
      - AddrOut | AluM | AluA | Sub | NFEn | ZFEn | CFEn
  - name: "CMP $4400,Y"
    value: 0xd9
    prefix: AbsY
    steps:
      - AddrOut | AluM | AluA | Sub | NFEn | ZFEn | CFEn
  - name: "CMP ($44,X)"
    value: 0xc1
    prefix: IndX
    steps:
      - AddrOut | AluM | AluA | Sub | NFEn | ZFEn | CFEn
  - name: "CMP ($44),Y"
    value: 0xd1
    prefix: IndY
    steps:
      - AddrOut | AluM | AluA | Sub | NFEn | ZFEn | CFEn
  - name: "CPX #$44"
    value: 0xe0
    steps:
      - AluM | AluX | Sub | NFEn | ZFEn | CFEn | CntEn
  - name: "CPX $44"
    value: 0xe4
    prefix: ZP
    steps:
      - AddrOut | AluM | AluX | Sub | NFEn | ZFEn | CFEn
  - name: "CPX $4400"
    value: 0xec
    prefix: Abs
    steps:
      - AddrOut | AluM | AluX | Sub | NFEn | ZFEn | CFEn
  - name: "CPY #$44"
    value: 0xc0
    steps:
      - AluM | AluY | Sub | NFEn | ZFEn | CFEn | CntEn
  - name: "CPY $44"
    value: 0xc4
    prefix: ZP
    steps:
      - AddrOut | AluM | AluY | Sub | NFEn | ZFEn | CFEn
  - name: "CPY $4400"
    value: 0xcc
    prefix: Abs
    steps:
      - AddrOut | AluM | AluY | Sub | NFEn | ZFEn | CFEn
  - name: "DEC $44"
    value: 0xc6
    prefix: ZP
    steps:
      - AddrOut | AluM | Sub | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "DEC $44,X"
    value: 0xd6
    prefix: ZPX
    steps:
      - AddrOut | AluM | Sub | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "DEC $4400"
    value: 0xce
    prefix: Abs
    steps:
      - AddrOut | AluM | Sub | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "DEC $4400,X"
    value: 0xde
    prefix: AbsX
    steps:
      - AddrOut | AluM | Sub | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "EOR #$44"
    value: 0x49
    steps:
      - AluM | AluA | Xor | AluToA | NFEn | ZFEn | CntEn
  - name: "EOR $44"
    value: 0x45
    prefix: ZP
    steps:
      - AddrOut | AluM | AluA | Xor | AluToA | NFEn | ZFEn
  - name: "EOR $44,X"
    value: 0x55
    prefix: ZPX
    steps:
      - AddrOut | AluM | AluA | Xor | AluToA | NFEn | ZFEn
  - name: "EOR $4400"
    value: 0x4d
    prefix: Abs
    steps:
      - AddrOut | AluM | AluA | Xor | AluToA | NFEn | ZFEn
  - name: "EOR $4400,X"
    value: 0x5d
    prefix: AbsX
    steps:
      - AddrOut | AluM | AluA | Xor | AluToA | NFEn | ZFEn
  - name: "EOR $4400,Y"
    value: 0x59
    prefix: AbsY
    steps:
      - AddrOut | AluM | AluA | Xor | AluToA | NFEn | ZFEn
  - name: "EOR ($44,X)"
    value: 0x41
    prefix: IndX
    steps:
      - AddrOut | AluM | AluA | Xor | AluToA | NFEn | ZFEn
  - name: "EOR ($44),Y"
    value: 0x51
    prefix: IndY
    steps:
      - AddrOut | AluM | AluA | Xor | AluToA | NFEn | ZFEn
  - name: "CLC"
    value: 0x18
    steps:
      - ClearCarry
  - name: "SEC"
    value: 0x38
    steps:
      - SetCarry
  - name: "CLI"
    value: 0x58
    steps:
      - ClearInt
  - name: "SEI"
    value: 0x78
    steps:
      - SetInt
  - name: "CLV"
    value: 0xb8
    steps:
      - ClearOverfl
  - name: "CLD"
    value: 0xd8
    steps:
      - ClearDec
  - name: "SED"
    value: 0xf8
    steps:
      - SetDec
  - name: "INC $44"
    value: 0xe6
    prefix: ZP
    steps:
      - AddrOut | AluM | Add | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "INC $44,X"
    value: 0xf6
    prefix: ZPX
    steps:
      - AddrOut | AluM | Add | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "INC $4400"
    value: 0xee
    prefix: Abs
    steps:
      - AddrOut | AluM | Add | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "INC $4400,X"
    value: 0xfe
    prefix: AbsX
    steps:
      - AddrOut | AluM | Add | CF1 | AluToB | NFEn | ZFEn
      - AddrOut | DataOutB
  - name: "LDA #$44"
    value: 0xA9
    steps:
      - AluM | AluToA | NFEn | ZFEn | CntEn
  - name: "LDA $44"
    value: 0xA5
    prefix: ZP
    steps:
      - AddrOut | AluM | AluToA | NFEn | ZFEn
  - name: "LDA $44,X"
    value: 0xB5
    prefix: ZPX
    steps:
      - AddrOut | AluM | AluToA | NFEn | ZFEn
  - name: "LDA $4400"
    value: 0xAD
    prefix: Abs
    steps:
      - AddrOut | AluM | AluToA | NFEn | ZFEn
  - name: "LDA $4400,X"
    value: 0xBD
    prefix: AbsX
    steps:
      - AddrOut | AluM | AluToA | NFEn | ZFEn
  - name: "LDA $4400,Y"
    value: 0xB9
    prefix: AbsY
    steps:
      - AddrOut | AluM | AluToA | NFEn | ZFEn
  - name: "LDA ($44,X)"
    value: 0xA1
    prefix: IndX
    steps:
      - AddrOut | AluM | AluToA | NFEn | ZFEn
  - name: "LDA ($44),Y"
    value: 0xB1
    prefix: IndY
    steps:
      - AddrOut | AluM | AluToA | NFEn | ZFEn
  - name: "LDX #$44"
    value: 0xA2
    steps:
      - AluM | AluToX | NFEn | ZFEn | CntEn
  - name: "LDY #$44"
    value: 0xA0
    steps:
      - AluM | AluToY | NFEn | ZFEn | CntEn
  - name: "TAX"
    value: 0xAA
    steps:
      - AluA | AluToX
  - name: "STA $44"
    value: 0x85
    prefix: ZP
    steps:
      - AddrOut | DataOutA
  - name: "STA $4400"
    value: 0x8D
    prefix: Abs
    steps:
      - AddrOut | DataOutA
  - name: "Reset"
    value: 0xFF
    type: full
    steps:
      - InstIn
      - CntLIn | CntEn | CntHIn | AluSp | Sub | CF1 | AluToSp
      - CntLIn | CntEn
      - CntLIn | CntEn
      - CntLIn | CntEn | AluM | AluToAddrH
      - AluM | AluToAddrL
      - CntLIn | CntHIn
